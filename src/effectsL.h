
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef EFFECTSL_H
#define EFFECTSL_H
#include <stdint.h>
#include <math.h>
#include "vultin.h"
#include "effectsL.tables.h"

static_inline void effectsL_Buffer_buffer(fix16_t (&oBuff)[128]){
}

void effectsL_Buffer_buffer_large(fix16_t (&oBuff)[8192]);

typedef struct effectsL_CombFB__ctx_type_0 {
   fix16_t scale;
   int pos;
   fix16_t fs;
   int delay;
   fix16_t decay;
   fix16_t buffer[8192];
} effectsL_CombFB__ctx_type_0;

typedef effectsL_CombFB__ctx_type_0 effectsL_CombFB_process_type;

void effectsL_CombFB__ctx_type_0_init(effectsL_CombFB__ctx_type_0 &_output_);

static_inline void effectsL_CombFB_process_init(effectsL_CombFB__ctx_type_0 &_output_){
   effectsL_CombFB__ctx_type_0_init(_output_);
   return ;
}

fix16_t effectsL_CombFB_process(effectsL_CombFB__ctx_type_0 &_ctx, fix16_t sample);

typedef effectsL_CombFB__ctx_type_0 effectsL_CombFB_process_bufferTo_type;

static_inline void effectsL_CombFB_process_bufferTo_init(effectsL_CombFB__ctx_type_0 &_output_){
   effectsL_CombFB__ctx_type_0_init(_output_);
   return ;
}

void effectsL_CombFB_process_bufferTo(effectsL_CombFB__ctx_type_0 &_ctx, int nb, fix16_t (&input)[128], fix16_t (&oBuffer)[128]);

typedef effectsL_CombFB__ctx_type_0 effectsL_CombFB_setDecay_type;

static_inline void effectsL_CombFB_setDecay_init(effectsL_CombFB__ctx_type_0 &_output_){
   effectsL_CombFB__ctx_type_0_init(_output_);
   return ;
}

static_inline void effectsL_CombFB_setDecay(effectsL_CombFB__ctx_type_0 &_ctx, fix16_t newDecay){
   _ctx.decay = fix_clip(newDecay,0x0 /* 0.000000 */,0x10000 /* 1.000000 */);
   _ctx.scale = fix_div(0x10000 /* 1.000000 */,(0x10000 /* 1.000000 */ + _ctx.decay));
}

typedef effectsL_CombFB__ctx_type_0 effectsL_CombFB_getMaxDelay_type;

static_inline void effectsL_CombFB_getMaxDelay_init(effectsL_CombFB__ctx_type_0 &_output_){
   effectsL_CombFB__ctx_type_0_init(_output_);
   return ;
}

static_inline int effectsL_CombFB_getMaxDelay(effectsL_CombFB__ctx_type_0 &_ctx){
   return 8192;
};

typedef effectsL_CombFB__ctx_type_0 effectsL_CombFB_getMaxDelayms_type;

static_inline void effectsL_CombFB_getMaxDelayms_init(effectsL_CombFB__ctx_type_0 &_output_){
   effectsL_CombFB__ctx_type_0_init(_output_);
   return ;
}

static_inline fix16_t effectsL_CombFB_getMaxDelayms(effectsL_CombFB__ctx_type_0 &_ctx){
   if(_ctx.fs <= 0x0 /* 0.000000 */){
      return 0x0 /* 0.000000 */;
   }
   return fix_div(0x20000000 /* 8192.000000 */,_ctx.fs);
}

typedef effectsL_CombFB__ctx_type_0 effectsL_CombFB_setDelay_type;

static_inline void effectsL_CombFB_setDelay_init(effectsL_CombFB__ctx_type_0 &_output_){
   effectsL_CombFB__ctx_type_0_init(_output_);
   return ;
}

static_inline void effectsL_CombFB_setDelay(effectsL_CombFB__ctx_type_0 &_ctx, int newDelay){
   _ctx.delay = int_clip(newDelay,1,effectsL_CombFB_getMaxDelay(_ctx));
   _ctx.pos = 0;
}

typedef effectsL_CombFB__ctx_type_0 effectsL_CombFB_setDelayms_type;

static_inline void effectsL_CombFB_setDelayms_init(effectsL_CombFB__ctx_type_0 &_output_){
   effectsL_CombFB__ctx_type_0_init(_output_);
   return ;
}

static_inline void effectsL_CombFB_setDelayms(effectsL_CombFB__ctx_type_0 &_ctx, fix16_t delayms){
   effectsL_CombFB_setDelay(_ctx,fix_to_int(fix_mul(_ctx.fs,delayms)));
};

typedef effectsL_CombFB__ctx_type_0 effectsL_CombFB_setSamplerate_type;

static_inline void effectsL_CombFB_setSamplerate_init(effectsL_CombFB__ctx_type_0 &_output_){
   effectsL_CombFB__ctx_type_0_init(_output_);
   return ;
}

static_inline void effectsL_CombFB_setSamplerate(effectsL_CombFB__ctx_type_0 &_ctx, fix16_t newFs){
   if(newFs > 0x0 /* 0.000000 */){
      _ctx.fs = newFs;
   }
};

typedef effectsL_CombFB__ctx_type_0 effectsL_CombFB_default_type;

static_inline void effectsL_CombFB_default_init(effectsL_CombFB__ctx_type_0 &_output_){
   effectsL_CombFB__ctx_type_0_init(_output_);
   return ;
}

static_inline void effectsL_CombFB_default(effectsL_CombFB__ctx_type_0 &_ctx){
   effectsL_Buffer_buffer_large(_ctx.buffer);
   effectsL_CombFB_setSamplerate(_ctx,0x2c1999 /* 44.100000 */);
   effectsL_CombFB_setDelayms(_ctx,0x320000 /* 50.000000 */);
   effectsL_CombFB_setDecay(_ctx,0x8000 /* 0.500000 */);
}

typedef struct effectsL_CombFB__ctx_type_1 {
   effectsL_CombFB__ctx_type_0 _inst13c;
} effectsL_CombFB__ctx_type_1;

typedef effectsL_CombFB__ctx_type_1 effectsL_CombFB_dummy_type;

static_inline void effectsL_CombFB__ctx_type_1_init(effectsL_CombFB__ctx_type_1 &_output_){
   effectsL_CombFB__ctx_type_1 &_ctx = _output_;
   effectsL_CombFB__ctx_type_0_init(_ctx._inst13c);
   
   return ;
}

static_inline void effectsL_CombFB_dummy_init(effectsL_CombFB__ctx_type_1 &_output_){
   effectsL_CombFB__ctx_type_1_init(_output_);
   return ;
}

static_inline void effectsL_CombFB_dummy(effectsL_CombFB__ctx_type_1 &_ctx){
   fix16_t buff[128];
   effectsL_Buffer_buffer(buff);
   effectsL_CombFB_process_bufferTo(_ctx._inst13c,0,buff,buff);
}

typedef struct effectsL_Allpass__ctx_type_0 {
   fix16_t scale;
   int pos;
   fix16_t fs;
   int delay;
   fix16_t decay;
   fix16_t buffer_allpassed[8192];
   fix16_t buffer[8192];
} effectsL_Allpass__ctx_type_0;

typedef effectsL_Allpass__ctx_type_0 effectsL_Allpass_process_type;

void effectsL_Allpass__ctx_type_0_init(effectsL_Allpass__ctx_type_0 &_output_);

static_inline void effectsL_Allpass_process_init(effectsL_Allpass__ctx_type_0 &_output_){
   effectsL_Allpass__ctx_type_0_init(_output_);
   return ;
}

fix16_t effectsL_Allpass_process(effectsL_Allpass__ctx_type_0 &_ctx, fix16_t sample);

typedef effectsL_Allpass__ctx_type_0 effectsL_Allpass_process_bufferTo_type;

static_inline void effectsL_Allpass_process_bufferTo_init(effectsL_Allpass__ctx_type_0 &_output_){
   effectsL_Allpass__ctx_type_0_init(_output_);
   return ;
}

void effectsL_Allpass_process_bufferTo(effectsL_Allpass__ctx_type_0 &_ctx, int nb, fix16_t (&input)[128], fix16_t (&oBuffer)[128]);

typedef effectsL_Allpass__ctx_type_0 effectsL_Allpass_setDecay_type;

static_inline void effectsL_Allpass_setDecay_init(effectsL_Allpass__ctx_type_0 &_output_){
   effectsL_Allpass__ctx_type_0_init(_output_);
   return ;
}

static_inline void effectsL_Allpass_setDecay(effectsL_Allpass__ctx_type_0 &_ctx, fix16_t newDecay){
   _ctx.decay = fix_clip(newDecay,0x0 /* 0.000000 */,0x10000 /* 1.000000 */);
   _ctx.scale = fix_div(0x10000 /* 1.000000 */,(0x10000 /* 1.000000 */ + (_ctx.decay << 1)));
}

typedef effectsL_Allpass__ctx_type_0 effectsL_Allpass_getMaxDelay_type;

static_inline void effectsL_Allpass_getMaxDelay_init(effectsL_Allpass__ctx_type_0 &_output_){
   effectsL_Allpass__ctx_type_0_init(_output_);
   return ;
}

static_inline int effectsL_Allpass_getMaxDelay(effectsL_Allpass__ctx_type_0 &_ctx){
   return 8192;
};

typedef effectsL_Allpass__ctx_type_0 effectsL_Allpass_getMaxDelayms_type;

static_inline void effectsL_Allpass_getMaxDelayms_init(effectsL_Allpass__ctx_type_0 &_output_){
   effectsL_Allpass__ctx_type_0_init(_output_);
   return ;
}

static_inline fix16_t effectsL_Allpass_getMaxDelayms(effectsL_Allpass__ctx_type_0 &_ctx){
   if(_ctx.fs <= 0x0 /* 0.000000 */){
      return 0x0 /* 0.000000 */;
   }
   return fix_div(0x20000000 /* 8192.000000 */,_ctx.fs);
}

typedef effectsL_Allpass__ctx_type_0 effectsL_Allpass_setDelay_type;

static_inline void effectsL_Allpass_setDelay_init(effectsL_Allpass__ctx_type_0 &_output_){
   effectsL_Allpass__ctx_type_0_init(_output_);
   return ;
}

static_inline void effectsL_Allpass_setDelay(effectsL_Allpass__ctx_type_0 &_ctx, int newDelay){
   _ctx.delay = int_clip(newDelay,1,effectsL_Allpass_getMaxDelay(_ctx));
   _ctx.pos = 0;
}

typedef effectsL_Allpass__ctx_type_0 effectsL_Allpass_setDelayms_type;

static_inline void effectsL_Allpass_setDelayms_init(effectsL_Allpass__ctx_type_0 &_output_){
   effectsL_Allpass__ctx_type_0_init(_output_);
   return ;
}

static_inline void effectsL_Allpass_setDelayms(effectsL_Allpass__ctx_type_0 &_ctx, fix16_t delayms){
   effectsL_Allpass_setDelay(_ctx,fix_to_int(fix_mul(_ctx.fs,delayms)));
};

typedef effectsL_Allpass__ctx_type_0 effectsL_Allpass_setSamplerate_type;

static_inline void effectsL_Allpass_setSamplerate_init(effectsL_Allpass__ctx_type_0 &_output_){
   effectsL_Allpass__ctx_type_0_init(_output_);
   return ;
}

static_inline void effectsL_Allpass_setSamplerate(effectsL_Allpass__ctx_type_0 &_ctx, fix16_t newFs){
   if(newFs > 0x0 /* 0.000000 */){
      _ctx.fs = newFs;
   }
};

typedef effectsL_Allpass__ctx_type_0 effectsL_Allpass_default_type;

static_inline void effectsL_Allpass_default_init(effectsL_Allpass__ctx_type_0 &_output_){
   effectsL_Allpass__ctx_type_0_init(_output_);
   return ;
}

void effectsL_Allpass_default(effectsL_Allpass__ctx_type_0 &_ctx);

typedef struct effectsL_Allpass__ctx_type_1 {
   effectsL_Allpass__ctx_type_0 _inst156;
} effectsL_Allpass__ctx_type_1;

typedef effectsL_Allpass__ctx_type_1 effectsL_Allpass_dummy_type;

static_inline void effectsL_Allpass__ctx_type_1_init(effectsL_Allpass__ctx_type_1 &_output_){
   effectsL_Allpass__ctx_type_1 &_ctx = _output_;
   effectsL_Allpass__ctx_type_0_init(_ctx._inst156);
   
   return ;
}

static_inline void effectsL_Allpass_dummy_init(effectsL_Allpass__ctx_type_1 &_output_){
   effectsL_Allpass__ctx_type_1_init(_output_);
   return ;
}

static_inline void effectsL_Allpass_dummy(effectsL_Allpass__ctx_type_1 &_ctx){
   fix16_t buff[128];
   effectsL_Buffer_buffer(buff);
   effectsL_Allpass_process_bufferTo(_ctx._inst156,0,buff,buff);
}

typedef struct effectsL_Reverb__ctx_type_0 {
   fix16_t reverbtime;
   fix16_t fs;
   int comb3delay;
   effectsL_CombFB__ctx_type_0 comb3;
   int comb2delay;
   effectsL_CombFB__ctx_type_0 comb2;
   int comb1delay;
   effectsL_CombFB__ctx_type_0 comb1;
   int comb0delay;
   effectsL_CombFB__ctx_type_0 comb0;
   fix16_t buffer_c3[128];
   fix16_t buffer_c2[128];
   fix16_t buffer_c1[128];
   fix16_t buffer_c0[128];
   fix16_t buffer_a1[128];
   fix16_t buffer_a0[128];
   effectsL_Allpass__ctx_type_0 allpass1;
   effectsL_Allpass__ctx_type_0 allpass0;
} effectsL_Reverb__ctx_type_0;

typedef effectsL_Reverb__ctx_type_0 effectsL_Reverb_process_type;

void effectsL_Reverb__ctx_type_0_init(effectsL_Reverb__ctx_type_0 &_output_);

static_inline void effectsL_Reverb_process_init(effectsL_Reverb__ctx_type_0 &_output_){
   effectsL_Reverb__ctx_type_0_init(_output_);
   return ;
}

static_inline fix16_t effectsL_Reverb_process(effectsL_Reverb__ctx_type_0 &_ctx, fix16_t sample){
   fix16_t combs_filter;
   combs_filter = ((effectsL_CombFB_process(_ctx.comb0,sample) + effectsL_CombFB_process(_ctx.comb1,sample) + effectsL_CombFB_process(_ctx.comb2,sample) + effectsL_CombFB_process(_ctx.comb3,sample)) >> 2);
   return effectsL_Allpass_process(_ctx.allpass1,effectsL_Allpass_process(_ctx.allpass0,combs_filter));
}

typedef effectsL_Reverb__ctx_type_0 effectsL_Reverb_process_bufferTo_type;

static_inline void effectsL_Reverb_process_bufferTo_init(effectsL_Reverb__ctx_type_0 &_output_){
   effectsL_Reverb__ctx_type_0_init(_output_);
   return ;
}

void effectsL_Reverb_process_bufferTo(effectsL_Reverb__ctx_type_0 &_ctx, int nb, fix16_t (&input)[128], fix16_t (&oBuffer)[128]);

typedef effectsL_Reverb__ctx_type_0 effectsL_Reverb_setSamplerate_type;

static_inline void effectsL_Reverb_setSamplerate_init(effectsL_Reverb__ctx_type_0 &_output_){
   effectsL_Reverb__ctx_type_0_init(_output_);
   return ;
}

void effectsL_Reverb_setSamplerate(effectsL_Reverb__ctx_type_0 &_ctx, fix16_t newFs);

typedef effectsL_Reverb__ctx_type_0 effectsL_Reverb_setReverbTime_type;

static_inline void effectsL_Reverb_setReverbTime_init(effectsL_Reverb__ctx_type_0 &_output_){
   effectsL_Reverb__ctx_type_0_init(_output_);
   return ;
}

void effectsL_Reverb_setReverbTime(effectsL_Reverb__ctx_type_0 &_ctx, fix16_t newReverbtime);

typedef effectsL_Reverb__ctx_type_0 effectsL_Reverb_setDelayms_type;

static_inline void effectsL_Reverb_setDelayms_init(effectsL_Reverb__ctx_type_0 &_output_){
   effectsL_Reverb__ctx_type_0_init(_output_);
   return ;
}

void effectsL_Reverb_setDelayms(effectsL_Reverb__ctx_type_0 &_ctx, fix16_t delayms);

typedef effectsL_Reverb__ctx_type_0 effectsL_Reverb_default_type;

static_inline void effectsL_Reverb_default_init(effectsL_Reverb__ctx_type_0 &_output_){
   effectsL_Reverb__ctx_type_0_init(_output_);
   return ;
}

void effectsL_Reverb_default(effectsL_Reverb__ctx_type_0 &_ctx);

typedef struct effectsL_Reverb__ctx_type_1 {
   effectsL_Reverb__ctx_type_0 _inst1f2;
} effectsL_Reverb__ctx_type_1;

typedef effectsL_Reverb__ctx_type_1 effectsL_Reverb_dummy_type;

static_inline void effectsL_Reverb__ctx_type_1_init(effectsL_Reverb__ctx_type_1 &_output_){
   effectsL_Reverb__ctx_type_1 &_ctx = _output_;
   effectsL_Reverb__ctx_type_0_init(_ctx._inst1f2);
   
   return ;
}

static_inline void effectsL_Reverb_dummy_init(effectsL_Reverb__ctx_type_1 &_output_){
   effectsL_Reverb__ctx_type_1_init(_output_);
   return ;
}

static_inline void effectsL_Reverb_dummy(effectsL_Reverb__ctx_type_1 &_ctx){
   fix16_t buff[128];
   effectsL_Buffer_buffer(buff);
   effectsL_Reverb_process_bufferTo(_ctx._inst1f2,0,buff,buff);
}

static_inline fix16_t effectsL_Util_noteToFrequency(int note){
   return fix_mul(0x217 /* 0.008176 */,fix_exp(fix_mul(0xec9 /* 0.057762 */,int_to_fix(note))));
};

static_inline fix16_t effectsL_Util_tonesToCoeff(fix16_t semitones){
   fix16_t log_base;
   log_base = 0xb172 /* 0.693147 */;
   return fix_exp(fix_mul(fix_mul(0x1555 /* 0.083333 */,log_base),semitones));
}

typedef struct effectsL_Util__ctx_type_2 {
   uint8_t pre;
} effectsL_Util__ctx_type_2;

typedef effectsL_Util__ctx_type_2 effectsL_Util_edge_type;

static_inline void effectsL_Util__ctx_type_2_init(effectsL_Util__ctx_type_2 &_output_){
   effectsL_Util__ctx_type_2 &_ctx = _output_;
   _ctx.pre = false;
   
   return ;
}

static_inline void effectsL_Util_edge_init(effectsL_Util__ctx_type_2 &_output_){
   effectsL_Util__ctx_type_2_init(_output_);
   return ;
}

static_inline uint8_t effectsL_Util_edge(effectsL_Util__ctx_type_2 &_ctx, uint8_t x){
   uint8_t ret;
   ret = (x && bool_not(_ctx.pre));
   _ctx.pre = x;
   return ret;
}

static_inline fix16_t effectsL_Util_cubic_clipper(fix16_t x){
   if(x <= -0xaaaa /* -0.666667 */){
      return -0xaaaa /* -0.666667 */;
   }
   else
   {
      if(x >= 0xaaaa /* 0.666667 */){
         return 0xaaaa /* 0.666667 */;
      }
      else
      {
         return (x + fix_mul(fix_mul(fix_mul(-0x5555 /* -0.333333 */,x),x),x));
      }
   }
};

typedef struct effectsL_Util__ctx_type_4 {
   fix16_t pre_x;
} effectsL_Util__ctx_type_4;

typedef effectsL_Util__ctx_type_4 effectsL_Util_change_type;

static_inline void effectsL_Util__ctx_type_4_init(effectsL_Util__ctx_type_4 &_output_){
   effectsL_Util__ctx_type_4 &_ctx = _output_;
   _ctx.pre_x = 0x0 /* 0.000000 */;
   
   return ;
}

static_inline void effectsL_Util_change_init(effectsL_Util__ctx_type_4 &_output_){
   effectsL_Util__ctx_type_4_init(_output_);
   return ;
}

static_inline uint8_t effectsL_Util_change(effectsL_Util__ctx_type_4 &_ctx, fix16_t x){
   uint8_t v;
   v = (_ctx.pre_x != x);
   _ctx.pre_x = x;
   return v;
}

typedef struct effectsL_Util__ctx_type_5 {
   fix16_t x;
} effectsL_Util__ctx_type_5;

typedef effectsL_Util__ctx_type_5 effectsL_Util_smooth_type;

static_inline void effectsL_Util__ctx_type_5_init(effectsL_Util__ctx_type_5 &_output_){
   effectsL_Util__ctx_type_5 &_ctx = _output_;
   _ctx.x = 0x0 /* 0.000000 */;
   
   return ;
}

static_inline void effectsL_Util_smooth_init(effectsL_Util__ctx_type_5 &_output_){
   effectsL_Util__ctx_type_5_init(_output_);
   return ;
}

static_inline fix16_t effectsL_Util_smooth(effectsL_Util__ctx_type_5 &_ctx, fix16_t input, fix16_t coeff){
   _ctx.x = (_ctx.x + fix_mul(coeff,(input + (- _ctx.x))));
   return _ctx.x;
}

static_inline fix16_t effectsL_Util_velocityToLevel(int velocity){
   velocity = int_clip(velocity,0,127);
   return fix_mul(0x204 /* 0.007874 */,int_to_fix(velocity));
}

typedef struct effectsL_Ladder__ctx_type_0 {
   fix16_t p3;
   fix16_t p2;
   fix16_t p1;
   fix16_t p0;
} effectsL_Ladder__ctx_type_0;

typedef effectsL_Ladder__ctx_type_0 effectsL_Ladder_heun_type;

void effectsL_Ladder__ctx_type_0_init(effectsL_Ladder__ctx_type_0 &_output_);

static_inline void effectsL_Ladder_heun_init(effectsL_Ladder__ctx_type_0 &_output_){
   effectsL_Ladder__ctx_type_0_init(_output_);
   return ;
}

fix16_t effectsL_Ladder_heun(effectsL_Ladder__ctx_type_0 &_ctx, fix16_t input, fix16_t fh, fix16_t res);

typedef struct effectsL_Ladder__ctx_type_1 {
   fix16_t p3;
   fix16_t p2;
   fix16_t p1;
   fix16_t p0;
} effectsL_Ladder__ctx_type_1;

typedef effectsL_Ladder__ctx_type_1 effectsL_Ladder_euler_type;

void effectsL_Ladder__ctx_type_1_init(effectsL_Ladder__ctx_type_1 &_output_);

static_inline void effectsL_Ladder_euler_init(effectsL_Ladder__ctx_type_1 &_output_){
   effectsL_Ladder__ctx_type_1_init(_output_);
   return ;
}

fix16_t effectsL_Ladder_euler(effectsL_Ladder__ctx_type_1 &_ctx, fix16_t input, fix16_t fh, fix16_t res);

typedef struct effectsL_Ladder__ctx_type_2 {
   fix16_t tune_table[1024];
   fix16_t tuneRatio;
   fix16_t rsize;
   fix16_t res;
   uint8_t heun;
   effectsL_Ladder__ctx_type_0 h;
   fix16_t fs_nyquist;
   fix16_t fs;
   fix16_t fh;
   effectsL_Ladder__ctx_type_1 e;
   fix16_t cut;
   effectsL_Util__ctx_type_4 _inst43b;
   effectsL_Util__ctx_type_4 _inst13b;
} effectsL_Ladder__ctx_type_2;

typedef effectsL_Ladder__ctx_type_2 effectsL_Ladder_getTune_type;

void effectsL_Ladder__ctx_type_2_init(effectsL_Ladder__ctx_type_2 &_output_);

static_inline void effectsL_Ladder_getTune_init(effectsL_Ladder__ctx_type_2 &_output_){
   effectsL_Ladder__ctx_type_2_init(_output_);
   return ;
}

fix16_t effectsL_Ladder_getTune(effectsL_Ladder__ctx_type_2 &_ctx, fix16_t cut);

typedef effectsL_Ladder__ctx_type_2 effectsL_Ladder_process_euler_type;

static_inline void effectsL_Ladder_process_euler_init(effectsL_Ladder__ctx_type_2 &_output_){
   effectsL_Ladder__ctx_type_2_init(_output_);
   return ;
}

fix16_t effectsL_Ladder_process_euler(effectsL_Ladder__ctx_type_2 &_ctx, fix16_t input, fix16_t cut, fix16_t res);

typedef effectsL_Ladder__ctx_type_2 effectsL_Ladder_process_heun_type;

static_inline void effectsL_Ladder_process_heun_init(effectsL_Ladder__ctx_type_2 &_output_){
   effectsL_Ladder__ctx_type_2_init(_output_);
   return ;
}

fix16_t effectsL_Ladder_process_heun(effectsL_Ladder__ctx_type_2 &_ctx, fix16_t input, fix16_t cut, fix16_t res);

typedef effectsL_Ladder__ctx_type_2 effectsL_Ladder_process_type;

static_inline void effectsL_Ladder_process_init(effectsL_Ladder__ctx_type_2 &_output_){
   effectsL_Ladder__ctx_type_2_init(_output_);
   return ;
}

static_inline fix16_t effectsL_Ladder_process(effectsL_Ladder__ctx_type_2 &_ctx, fix16_t input){
   if(_ctx.heun){
      return effectsL_Ladder_process_heun(_ctx,input,_ctx.cut,_ctx.res);
   }
   else
   {
      return effectsL_Ladder_process_euler(_ctx,input,_ctx.cut,_ctx.res);
   }
};

typedef effectsL_Ladder__ctx_type_2 effectsL_Ladder_process_bufferTo_type;

static_inline void effectsL_Ladder_process_bufferTo_init(effectsL_Ladder__ctx_type_2 &_output_){
   effectsL_Ladder__ctx_type_2_init(_output_);
   return ;
}

void effectsL_Ladder_process_bufferTo(effectsL_Ladder__ctx_type_2 &_ctx, int nb, fix16_t (&input)[128], fix16_t (&oBuffer)[128]);

typedef effectsL_Ladder__ctx_type_2 effectsL_Ladder_updateTune_type;

static_inline void effectsL_Ladder_updateTune_init(effectsL_Ladder__ctx_type_2 &_output_){
   effectsL_Ladder__ctx_type_2_init(_output_);
   return ;
}

void effectsL_Ladder_updateTune(effectsL_Ladder__ctx_type_2 &_ctx);

typedef effectsL_Ladder__ctx_type_2 effectsL_Ladder_setEstimationMethod_type;

static_inline void effectsL_Ladder_setEstimationMethod_init(effectsL_Ladder__ctx_type_2 &_output_){
   effectsL_Ladder__ctx_type_2_init(_output_);
   return ;
}

static_inline void effectsL_Ladder_setEstimationMethod(effectsL_Ladder__ctx_type_2 &_ctx, int method){
   if(method == 1){
      _ctx.heun = true;
   }
   else
   {
      _ctx.heun = false;
   }
};

typedef effectsL_Ladder__ctx_type_2 effectsL_Ladder_setCutOff_type;

static_inline void effectsL_Ladder_setCutOff_init(effectsL_Ladder__ctx_type_2 &_output_){
   effectsL_Ladder__ctx_type_2_init(_output_);
   return ;
}

static_inline void effectsL_Ladder_setCutOff(effectsL_Ladder__ctx_type_2 &_ctx, fix16_t newCut){
   _ctx.cut = fix_clip(newCut,0x0 /* 0.000000 */,_ctx.fs_nyquist);
};

typedef effectsL_Ladder__ctx_type_2 effectsL_Ladder_setResonance_type;

static_inline void effectsL_Ladder_setResonance_init(effectsL_Ladder__ctx_type_2 &_output_){
   effectsL_Ladder__ctx_type_2_init(_output_);
   return ;
}

static_inline void effectsL_Ladder_setResonance(effectsL_Ladder__ctx_type_2 &_ctx, fix16_t newRes){
   _ctx.res = newRes;
};

typedef effectsL_Ladder__ctx_type_2 effectsL_Ladder_setSamplerate_type;

static_inline void effectsL_Ladder_setSamplerate_init(effectsL_Ladder__ctx_type_2 &_output_){
   effectsL_Ladder__ctx_type_2_init(_output_);
   return ;
}

void effectsL_Ladder_setSamplerate(effectsL_Ladder__ctx_type_2 &_ctx, fix16_t newFs);

typedef effectsL_Ladder__ctx_type_2 effectsL_Ladder_default_type;

static_inline void effectsL_Ladder_default_init(effectsL_Ladder__ctx_type_2 &_output_){
   effectsL_Ladder__ctx_type_2_init(_output_);
   return ;
}

static_inline void effectsL_Ladder_default(effectsL_Ladder__ctx_type_2 &_ctx){
   _ctx.rsize = 0x4000000 /* 1024.000000 */;
   effectsL_Ladder_setSamplerate(_ctx,0x2c1999 /* 44.100000 */);
   effectsL_Ladder_setEstimationMethod(_ctx,0);
}

typedef struct effectsL_Ladder__ctx_type_3 {
   effectsL_Ladder__ctx_type_2 _inst163;
} effectsL_Ladder__ctx_type_3;

typedef effectsL_Ladder__ctx_type_3 effectsL_Ladder_dummy_type;

static_inline void effectsL_Ladder__ctx_type_3_init(effectsL_Ladder__ctx_type_3 &_output_){
   effectsL_Ladder__ctx_type_3 &_ctx = _output_;
   effectsL_Ladder__ctx_type_2_init(_ctx._inst163);
   
   return ;
}

static_inline void effectsL_Ladder_dummy_init(effectsL_Ladder__ctx_type_3 &_output_){
   effectsL_Ladder__ctx_type_3_init(_output_);
   return ;
}

static_inline void effectsL_Ladder_dummy(effectsL_Ladder__ctx_type_3 &_ctx){
   fix16_t buff[128];
   effectsL_Buffer_buffer(buff);
   effectsL_Ladder_process_bufferTo(_ctx._inst163,0,buff,buff);
}

typedef struct effectsL_CombFF__ctx_type_0 {
   fix16_t scale;
   int pos;
   fix16_t fs;
   int delay;
   fix16_t decay;
   fix16_t buffer[8192];
} effectsL_CombFF__ctx_type_0;

typedef effectsL_CombFF__ctx_type_0 effectsL_CombFF_process_type;

void effectsL_CombFF__ctx_type_0_init(effectsL_CombFF__ctx_type_0 &_output_);

static_inline void effectsL_CombFF_process_init(effectsL_CombFF__ctx_type_0 &_output_){
   effectsL_CombFF__ctx_type_0_init(_output_);
   return ;
}

fix16_t effectsL_CombFF_process(effectsL_CombFF__ctx_type_0 &_ctx, fix16_t sample);

typedef effectsL_CombFF__ctx_type_0 effectsL_CombFF_process_bufferTo_type;

static_inline void effectsL_CombFF_process_bufferTo_init(effectsL_CombFF__ctx_type_0 &_output_){
   effectsL_CombFF__ctx_type_0_init(_output_);
   return ;
}

void effectsL_CombFF_process_bufferTo(effectsL_CombFF__ctx_type_0 &_ctx, int nb, fix16_t (&input)[128], fix16_t (&oBuffer)[128]);

typedef effectsL_CombFF__ctx_type_0 effectsL_CombFF_setDecay_type;

static_inline void effectsL_CombFF_setDecay_init(effectsL_CombFF__ctx_type_0 &_output_){
   effectsL_CombFF__ctx_type_0_init(_output_);
   return ;
}

static_inline void effectsL_CombFF_setDecay(effectsL_CombFF__ctx_type_0 &_ctx, fix16_t newDecay){
   _ctx.decay = fix_clip(newDecay,0x0 /* 0.000000 */,0x10000 /* 1.000000 */);
   _ctx.scale = fix_div(0x10000 /* 1.000000 */,(0x10000 /* 1.000000 */ + _ctx.decay));
}

typedef effectsL_CombFF__ctx_type_0 effectsL_CombFF_getMaxDelay_type;

static_inline void effectsL_CombFF_getMaxDelay_init(effectsL_CombFF__ctx_type_0 &_output_){
   effectsL_CombFF__ctx_type_0_init(_output_);
   return ;
}

static_inline int effectsL_CombFF_getMaxDelay(effectsL_CombFF__ctx_type_0 &_ctx){
   return 8192;
};

typedef effectsL_CombFF__ctx_type_0 effectsL_CombFF_getMaxDelayms_type;

static_inline void effectsL_CombFF_getMaxDelayms_init(effectsL_CombFF__ctx_type_0 &_output_){
   effectsL_CombFF__ctx_type_0_init(_output_);
   return ;
}

static_inline fix16_t effectsL_CombFF_getMaxDelayms(effectsL_CombFF__ctx_type_0 &_ctx){
   if(_ctx.fs <= 0x0 /* 0.000000 */){
      return 0x0 /* 0.000000 */;
   }
   return fix_div(0x20000000 /* 8192.000000 */,_ctx.fs);
}

typedef effectsL_CombFF__ctx_type_0 effectsL_CombFF_setDelay_type;

static_inline void effectsL_CombFF_setDelay_init(effectsL_CombFF__ctx_type_0 &_output_){
   effectsL_CombFF__ctx_type_0_init(_output_);
   return ;
}

static_inline void effectsL_CombFF_setDelay(effectsL_CombFF__ctx_type_0 &_ctx, int newDelay){
   _ctx.delay = int_clip(newDelay,1,effectsL_CombFF_getMaxDelay(_ctx));
   _ctx.pos = 0;
}

typedef effectsL_CombFF__ctx_type_0 effectsL_CombFF_setDelayms_type;

static_inline void effectsL_CombFF_setDelayms_init(effectsL_CombFF__ctx_type_0 &_output_){
   effectsL_CombFF__ctx_type_0_init(_output_);
   return ;
}

static_inline void effectsL_CombFF_setDelayms(effectsL_CombFF__ctx_type_0 &_ctx, fix16_t delayms){
   effectsL_CombFF_setDelay(_ctx,fix_to_int(fix_mul(_ctx.fs,delayms)));
};

typedef effectsL_CombFF__ctx_type_0 effectsL_CombFF_setSamplerate_type;

static_inline void effectsL_CombFF_setSamplerate_init(effectsL_CombFF__ctx_type_0 &_output_){
   effectsL_CombFF__ctx_type_0_init(_output_);
   return ;
}

static_inline void effectsL_CombFF_setSamplerate(effectsL_CombFF__ctx_type_0 &_ctx, fix16_t newFs){
   if(newFs > 0x0 /* 0.000000 */){
      _ctx.fs = newFs;
   }
};

typedef effectsL_CombFF__ctx_type_0 effectsL_CombFF_default_type;

static_inline void effectsL_CombFF_default_init(effectsL_CombFF__ctx_type_0 &_output_){
   effectsL_CombFF__ctx_type_0_init(_output_);
   return ;
}

static_inline void effectsL_CombFF_default(effectsL_CombFF__ctx_type_0 &_ctx){
   effectsL_Buffer_buffer_large(_ctx.buffer);
   effectsL_CombFF_setSamplerate(_ctx,0x2c1999 /* 44.100000 */);
   effectsL_CombFF_setDelayms(_ctx,0x320000 /* 50.000000 */);
   effectsL_CombFF_setDecay(_ctx,0x8000 /* 0.500000 */);
}

typedef struct effectsL_CombFF__ctx_type_1 {
   effectsL_CombFF__ctx_type_0 _inst115;
} effectsL_CombFF__ctx_type_1;

typedef effectsL_CombFF__ctx_type_1 effectsL_CombFF_dummy_type;

static_inline void effectsL_CombFF__ctx_type_1_init(effectsL_CombFF__ctx_type_1 &_output_){
   effectsL_CombFF__ctx_type_1 &_ctx = _output_;
   effectsL_CombFF__ctx_type_0_init(_ctx._inst115);
   
   return ;
}

static_inline void effectsL_CombFF_dummy_init(effectsL_CombFF__ctx_type_1 &_output_){
   effectsL_CombFF__ctx_type_1_init(_output_);
   return ;
}

static_inline void effectsL_CombFF_dummy(effectsL_CombFF__ctx_type_1 &_ctx){
   fix16_t buff[128];
   effectsL_Buffer_buffer(buff);
   effectsL_CombFF_process_bufferTo(_ctx._inst115,0,buff,buff);
}

static_inline fix16_t effectsL_Saturator_tanh_table_raw_c0(int index){
   return effectsL_Saturator_tanh_table_c0[index];
};

static_inline fix16_t effectsL_Saturator_tanh_table_raw_c1(int index){
   return effectsL_Saturator_tanh_table_c1[index];
};

static_inline fix16_t effectsL_Saturator_tanh_table_raw_c2(int index){
   return effectsL_Saturator_tanh_table_c2[index];
};

static_inline fix16_t effectsL_Saturator_tanh_table(fix16_t x){
   int index;
   index = int_clip(fix_to_int(fix_mul(0x3fe000 /* 63.875000 */,(0x40000 /* 4.000000 */ + x))),0,511);
   return (fix_wrap_array(effectsL_Saturator_tanh_table_c0)[index] + fix_mul(x,(fix_wrap_array(effectsL_Saturator_tanh_table_c1)[index] + fix_mul(x,fix_wrap_array(effectsL_Saturator_tanh_table_c2)[index]))));
}

static_inline fix16_t effectsL_Saturator_getMinCoeff(){
   return -0x3e80000 /* -1000.000000 */;
};

static_inline fix16_t effectsL_Saturator_getMaxCoeff(){
   return 0x3e80000 /* 1000.000000 */;
};

typedef struct effectsL_Saturator__ctx_type_6 {
   fix16_t threshopp;
   fix16_t threshinv;
   fix16_t thresh;
   fix16_t coeff;
} effectsL_Saturator__ctx_type_6;

typedef effectsL_Saturator__ctx_type_6 effectsL_Saturator_process_type;

void effectsL_Saturator__ctx_type_6_init(effectsL_Saturator__ctx_type_6 &_output_);

static_inline void effectsL_Saturator_process_init(effectsL_Saturator__ctx_type_6 &_output_){
   effectsL_Saturator__ctx_type_6_init(_output_);
   return ;
}

fix16_t effectsL_Saturator_process(effectsL_Saturator__ctx_type_6 &_ctx, fix16_t x);

typedef effectsL_Saturator__ctx_type_6 effectsL_Saturator_process_bufferTo_type;

static_inline void effectsL_Saturator_process_bufferTo_init(effectsL_Saturator__ctx_type_6 &_output_){
   effectsL_Saturator__ctx_type_6_init(_output_);
   return ;
}

void effectsL_Saturator_process_bufferTo(effectsL_Saturator__ctx_type_6 &_ctx, int nb, fix16_t (&input)[128], fix16_t (&oBuffer)[128]);

typedef effectsL_Saturator__ctx_type_6 effectsL_Saturator_setThreshold_type;

static_inline void effectsL_Saturator_setThreshold_init(effectsL_Saturator__ctx_type_6 &_output_){
   effectsL_Saturator__ctx_type_6_init(_output_);
   return ;
}

static_inline void effectsL_Saturator_setThreshold(effectsL_Saturator__ctx_type_6 &_ctx, fix16_t t){
   _ctx.thresh = fix_clip(t,0x0 /* 0.000000 */,0x10000 /* 1.000000 */);
   _ctx.threshopp = (0x10000 /* 1.000000 */ + (- _ctx.thresh));
   if(_ctx.thresh < 0x10000 /* 1.000000 */){
      _ctx.threshinv = fix_div(0x10000 /* 1.000000 */,(0x10000 /* 1.000000 */ + (- _ctx.thresh)));
   }
}

typedef effectsL_Saturator__ctx_type_6 effectsL_Saturator_setCoeff_type;

static_inline void effectsL_Saturator_setCoeff_init(effectsL_Saturator__ctx_type_6 &_output_){
   effectsL_Saturator__ctx_type_6_init(_output_);
   return ;
}

static_inline void effectsL_Saturator_setCoeff(effectsL_Saturator__ctx_type_6 &_ctx, fix16_t c){
   _ctx.coeff = fix_clip(c,-0x3e80000 /* -1000.000000 */,0x3e80000 /* 1000.000000 */);
};

typedef effectsL_Saturator__ctx_type_6 effectsL_Saturator_default_type;

static_inline void effectsL_Saturator_default_init(effectsL_Saturator__ctx_type_6 &_output_){
   effectsL_Saturator__ctx_type_6_init(_output_);
   return ;
}

static_inline void effectsL_Saturator_default(effectsL_Saturator__ctx_type_6 &_ctx){
   effectsL_Saturator_setCoeff(_ctx,0x10000 /* 1.000000 */);
   effectsL_Saturator_setThreshold(_ctx,0xcccc /* 0.800000 */);
}

typedef struct effectsL_Saturator__ctx_type_7 {
   effectsL_Saturator__ctx_type_6 _inst15c;
} effectsL_Saturator__ctx_type_7;

typedef effectsL_Saturator__ctx_type_7 effectsL_Saturator_dummy_type;

static_inline void effectsL_Saturator__ctx_type_7_init(effectsL_Saturator__ctx_type_7 &_output_){
   effectsL_Saturator__ctx_type_7 &_ctx = _output_;
   effectsL_Saturator__ctx_type_6_init(_ctx._inst15c);
   
   return ;
}

static_inline void effectsL_Saturator_dummy_init(effectsL_Saturator__ctx_type_7 &_output_){
   effectsL_Saturator__ctx_type_7_init(_output_);
   return ;
}

static_inline void effectsL_Saturator_dummy(effectsL_Saturator__ctx_type_7 &_ctx){
   fix16_t buff[128];
   effectsL_Buffer_buffer(buff);
   effectsL_Saturator_process_bufferTo(_ctx._inst15c,0,buff,buff);
}

typedef struct effectsL_SVF__ctx_type_0 {
   fix16_t z2;
   fix16_t z1;
   fix16_t targetFreq;
   int sel;
   fix16_t rsize;
   fix16_t q;
   fix16_t inv_den;
   fix16_t g_table[1024];
   fix16_t gRatio;
   fix16_t g;
   fix16_t fs_nyquist;
   fix16_t fs;
   fix16_t freq;
   effectsL_Util__ctx_type_5 _inst955;
   effectsL_Util__ctx_type_4 _inst173b;
   effectsL_Util__ctx_type_5 _inst1655;
   effectsL_Util__ctx_type_4 _inst103b;
   fix16_t R;
} effectsL_SVF__ctx_type_0;

typedef effectsL_SVF__ctx_type_0 effectsL_SVF_updateGTable_type;

void effectsL_SVF__ctx_type_0_init(effectsL_SVF__ctx_type_0 &_output_);

static_inline void effectsL_SVF_updateGTable_init(effectsL_SVF__ctx_type_0 &_output_){
   effectsL_SVF__ctx_type_0_init(_output_);
   return ;
}

void effectsL_SVF_updateGTable(effectsL_SVF__ctx_type_0 &_ctx);

typedef effectsL_SVF__ctx_type_0 effectsL_SVF_updateG_type;

static_inline void effectsL_SVF_updateG_init(effectsL_SVF__ctx_type_0 &_output_){
   effectsL_SVF__ctx_type_0_init(_output_);
   return ;
}

void effectsL_SVF_updateG(effectsL_SVF__ctx_type_0 &_ctx);

typedef effectsL_SVF__ctx_type_0 effectsL_SVF_updateCoeffs_type;

static_inline void effectsL_SVF_updateCoeffs_init(effectsL_SVF__ctx_type_0 &_output_){
   effectsL_SVF__ctx_type_0_init(_output_);
   return ;
}

static_inline void effectsL_SVF_updateCoeffs(effectsL_SVF__ctx_type_0 &_ctx){
   _ctx.R = fix_div(0x10000 /* 1.000000 */,((0x0 /* 0.000000 */ + _ctx.q) << 1));
   _ctx.inv_den = fix_div(0x10000 /* 1.000000 */,(0x10000 /* 1.000000 */ + fix_mul(_ctx.g,_ctx.g) + (fix_mul(_ctx.R,_ctx.g) << 1)));
}

typedef effectsL_SVF__ctx_type_0 effectsL_SVF_setFreq_type;

static_inline void effectsL_SVF_setFreq_init(effectsL_SVF__ctx_type_0 &_output_){
   effectsL_SVF__ctx_type_0_init(_output_);
   return ;
}

static_inline void effectsL_SVF_setFreq(effectsL_SVF__ctx_type_0 &_ctx, fix16_t newFreq){
   _ctx.targetFreq = fix_clip(newFreq,0x0 /* 0.000000 */,_ctx.fs_nyquist);
   effectsL_SVF_updateG(_ctx);
   effectsL_SVF_updateCoeffs(_ctx);
}

typedef effectsL_SVF__ctx_type_0 effectsL_SVF_setQ_type;

static_inline void effectsL_SVF_setQ_init(effectsL_SVF__ctx_type_0 &_output_){
   effectsL_SVF__ctx_type_0_init(_output_);
   return ;
}

static_inline void effectsL_SVF_setQ(effectsL_SVF__ctx_type_0 &_ctx, fix16_t newQ){
   if(newQ >= 0x0 /* 0.000000 */){
      _ctx.q = newQ;
   }
   effectsL_SVF_updateCoeffs(_ctx);
}

typedef effectsL_SVF__ctx_type_0 effectsL_SVF_setType_type;

static_inline void effectsL_SVF_setType_init(effectsL_SVF__ctx_type_0 &_output_){
   effectsL_SVF__ctx_type_0_init(_output_);
   return ;
}

static_inline void effectsL_SVF_setType(effectsL_SVF__ctx_type_0 &_ctx, int newSel){
   _ctx.sel = int_clip(newSel,0,4);
};

typedef effectsL_SVF__ctx_type_0 effectsL_SVF_process_type;

static_inline void effectsL_SVF_process_init(effectsL_SVF__ctx_type_0 &_output_){
   effectsL_SVF__ctx_type_0_init(_output_);
   return ;
}

fix16_t effectsL_SVF_process(effectsL_SVF__ctx_type_0 &_ctx, fix16_t input);

typedef effectsL_SVF__ctx_type_0 effectsL_SVF_process_bufferTo_type;

static_inline void effectsL_SVF_process_bufferTo_init(effectsL_SVF__ctx_type_0 &_output_){
   effectsL_SVF__ctx_type_0_init(_output_);
   return ;
}

void effectsL_SVF_process_bufferTo(effectsL_SVF__ctx_type_0 &_ctx, int nb, fix16_t (&input)[128], fix16_t (&oBuffer)[128]);

typedef effectsL_SVF__ctx_type_0 effectsL_SVF_setSamplerate_type;

static_inline void effectsL_SVF_setSamplerate_init(effectsL_SVF__ctx_type_0 &_output_){
   effectsL_SVF__ctx_type_0_init(_output_);
   return ;
}

void effectsL_SVF_setSamplerate(effectsL_SVF__ctx_type_0 &_ctx, fix16_t newFs);

typedef effectsL_SVF__ctx_type_0 effectsL_SVF_default_type;

static_inline void effectsL_SVF_default_init(effectsL_SVF__ctx_type_0 &_output_){
   effectsL_SVF__ctx_type_0_init(_output_);
   return ;
}

static_inline void effectsL_SVF_default(effectsL_SVF__ctx_type_0 &_ctx){
   _ctx.rsize = 0x4000000 /* 1024.000000 */;
   _ctx.freq = 0x0 /* 0.000000 */;
   _ctx.q = 0x1999 /* 0.100000 */;
   effectsL_SVF_setSamplerate(_ctx,0x2c1999 /* 44.100000 */);
}

typedef struct effectsL_SVF__ctx_type_1 {
   effectsL_SVF__ctx_type_0 _inst1f;
} effectsL_SVF__ctx_type_1;

typedef effectsL_SVF__ctx_type_1 effectsL_SVF_dummy_type;

static_inline void effectsL_SVF__ctx_type_1_init(effectsL_SVF__ctx_type_1 &_output_){
   effectsL_SVF__ctx_type_1 &_ctx = _output_;
   effectsL_SVF__ctx_type_0_init(_ctx._inst1f);
   
   return ;
}

static_inline void effectsL_SVF_dummy_init(effectsL_SVF__ctx_type_1 &_output_){
   effectsL_SVF__ctx_type_1_init(_output_);
   return ;
}

static_inline void effectsL_SVF_dummy(effectsL_SVF__ctx_type_1 &_ctx){
   fix16_t buff[128];
   effectsL_Buffer_buffer(buff);
   effectsL_SVF_process_bufferTo(_ctx._inst1f,0,buff,buff);
}



#endif // EFFECTSL_H
