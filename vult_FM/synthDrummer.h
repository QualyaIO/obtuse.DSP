
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#ifndef SYNTHDRUMMER_H
#define SYNTHDRUMMER_H
#include <stdint.h>
#include <math.h>
#include "vultin.h"
#include "synthDrummer.tables.h"

static_inline fix16_t synthDrummer_Util_noteToFrequency(int note){
   return fix_mul(0x217 /* 0.008176 */,fix_exp(fix_mul(0xec9 /* 0.057762 */,int_to_fix(note))));
};

typedef struct synthDrummer_Util__ctx_type_1 {
   uint8_t pre;
} synthDrummer_Util__ctx_type_1;

typedef synthDrummer_Util__ctx_type_1 synthDrummer_Util_edge_type;

static_inline void synthDrummer_Util__ctx_type_1_init(synthDrummer_Util__ctx_type_1 &_output_){
   synthDrummer_Util__ctx_type_1 _ctx;
   _ctx.pre = false;
   _output_ = _ctx;
   return ;
}

static_inline void synthDrummer_Util_edge_init(synthDrummer_Util__ctx_type_1 &_output_){
   synthDrummer_Util__ctx_type_1_init(_output_);
   return ;
}

static_inline uint8_t synthDrummer_Util_edge(synthDrummer_Util__ctx_type_1 &_ctx, uint8_t x){
   uint8_t ret;
   ret = (x && bool_not(_ctx.pre));
   _ctx.pre = x;
   return ret;
}

static_inline void synthDrummer_Util_buffer(fix16_t (&_output_)[256]){
   fix16_t buff[256];
   fix_copy_array(256,_output_,buff);
   return ;
}

static_inline void synthDrummer_Util_buffer_large(fix16_t (&_output_)[2048]){
   fix16_t buff[2048];
   fix_copy_array(2048,_output_,buff);
   return ;
}

static_inline int synthDrummer_Drummer_drumkit_samples(){
   return 107178;
};

static_inline fix16_t synthDrummer_Drummer_drumkit(int channel, int index){
   if(channel == 0){
      return fix_wrap_array(synthDrummer_Drummer_drumkit_chan_0)[(index % 107178)];
   }
   return 0x0 /* 0.000000 */;
}

typedef struct synthDrummer_Drummer__ctx_type_2 {
   fix16_t step;
   int slices_start[12];
   int slices_end[12];
   int slice;
   int size;
   fix16_t sampleFs;
   int posBase;
   fix16_t pos;
   fix16_t noteRatio;
   fix16_t fsRatio;
   fix16_t fs;
   fix16_t buffer_o[256];
} synthDrummer_Drummer__ctx_type_2;

typedef synthDrummer_Drummer__ctx_type_2 synthDrummer_Drummer_getSample_type;

void synthDrummer_Drummer__ctx_type_2_init(synthDrummer_Drummer__ctx_type_2 &_output_);

static_inline void synthDrummer_Drummer_getSample_init(synthDrummer_Drummer__ctx_type_2 &_output_){
   synthDrummer_Drummer__ctx_type_2_init(_output_);
   return ;
}

static_inline fix16_t synthDrummer_Drummer_getSample(synthDrummer_Drummer__ctx_type_2 &_ctx, int index){
   return synthDrummer_Drummer_drumkit(0,index);
};

typedef synthDrummer_Drummer__ctx_type_2 synthDrummer_Drummer_process_type;

static_inline void synthDrummer_Drummer_process_init(synthDrummer_Drummer__ctx_type_2 &_output_){
   synthDrummer_Drummer__ctx_type_2_init(_output_);
   return ;
}

fix16_t synthDrummer_Drummer_process(synthDrummer_Drummer__ctx_type_2 &_ctx);

typedef synthDrummer_Drummer__ctx_type_2 synthDrummer_Drummer_process_bufferTo_type;

static_inline void synthDrummer_Drummer_process_bufferTo_init(synthDrummer_Drummer__ctx_type_2 &_output_){
   synthDrummer_Drummer__ctx_type_2_init(_output_);
   return ;
}

void synthDrummer_Drummer_process_bufferTo(synthDrummer_Drummer__ctx_type_2 &_ctx, int nb, fix16_t (&oBuffer)[256]);

typedef synthDrummer_Drummer__ctx_type_2 synthDrummer_Drummer_process_buffer_type;

static_inline void synthDrummer_Drummer_process_buffer_init(synthDrummer_Drummer__ctx_type_2 &_output_){
   synthDrummer_Drummer__ctx_type_2_init(_output_);
   return ;
}

static_inline void synthDrummer_Drummer_process_buffer(synthDrummer_Drummer__ctx_type_2 &_ctx, int nb){
   synthDrummer_Drummer_process_bufferTo(_ctx,nb,_ctx.buffer_o);
};

typedef synthDrummer_Drummer__ctx_type_2 synthDrummer_Drummer_updateStep_type;

static_inline void synthDrummer_Drummer_updateStep_init(synthDrummer_Drummer__ctx_type_2 &_output_){
   synthDrummer_Drummer__ctx_type_2_init(_output_);
   return ;
}

static_inline void synthDrummer_Drummer_updateStep(synthDrummer_Drummer__ctx_type_2 &_ctx){
   _ctx.step = fix_mul(_ctx.fsRatio,_ctx.noteRatio);
};

typedef synthDrummer_Drummer__ctx_type_2 synthDrummer_Drummer_setSlices_type;

static_inline void synthDrummer_Drummer_setSlices_init(synthDrummer_Drummer__ctx_type_2 &_output_){
   synthDrummer_Drummer__ctx_type_2_init(_output_);
   return ;
}

void synthDrummer_Drummer_setSlices(synthDrummer_Drummer__ctx_type_2 &_ctx, int (&newSlicesStart)[12], int (&newSlicesEnd)[12]);

typedef synthDrummer_Drummer__ctx_type_2 synthDrummer_Drummer_setSamplerate_type;

static_inline void synthDrummer_Drummer_setSamplerate_init(synthDrummer_Drummer__ctx_type_2 &_output_){
   synthDrummer_Drummer__ctx_type_2_init(_output_);
   return ;
}

void synthDrummer_Drummer_setSamplerate(synthDrummer_Drummer__ctx_type_2 &_ctx, fix16_t newFs);

typedef synthDrummer_Drummer__ctx_type_2 synthDrummer_Drummer_getSampleSize_type;

static_inline void synthDrummer_Drummer_getSampleSize_init(synthDrummer_Drummer__ctx_type_2 &_output_){
   synthDrummer_Drummer__ctx_type_2_init(_output_);
   return ;
}

static_inline int synthDrummer_Drummer_getSampleSize(synthDrummer_Drummer__ctx_type_2 &_ctx){
   return _ctx.size;
};

typedef synthDrummer_Drummer__ctx_type_2 synthDrummer_Drummer_noteOn_type;

static_inline void synthDrummer_Drummer_noteOn_init(synthDrummer_Drummer__ctx_type_2 &_output_){
   synthDrummer_Drummer__ctx_type_2_init(_output_);
   return ;
}

void synthDrummer_Drummer_noteOn(synthDrummer_Drummer__ctx_type_2 &_ctx, int note, int velocity, int channel);

typedef synthDrummer_Drummer__ctx_type_2 synthDrummer_Drummer_noteOff_type;

static_inline void synthDrummer_Drummer_noteOff_init(synthDrummer_Drummer__ctx_type_2 &_output_){
   synthDrummer_Drummer__ctx_type_2_init(_output_);
   return ;
}

static_inline void synthDrummer_Drummer_noteOff(synthDrummer_Drummer__ctx_type_2 &_ctx, int note, int channel){
}

typedef synthDrummer_Drummer__ctx_type_2 synthDrummer_Drummer_default_type;

static_inline void synthDrummer_Drummer_default_init(synthDrummer_Drummer__ctx_type_2 &_output_){
   synthDrummer_Drummer__ctx_type_2_init(_output_);
   return ;
}

void synthDrummer_Drummer_default(synthDrummer_Drummer__ctx_type_2 &_ctx);



#endif // SYNTHDRUMMER_H
