
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#include "engine.h"

void Sinus_wav__ctx_type_3_init(Sinus_wav__ctx_type_3 &_output_){
   Sinus_wav__ctx_type_3 _ctx;
   _ctx.stepRatio = 0x0 /* 0.000000 */;
   _ctx.step = 0x0 /* 0.000000 */;
   _ctx.phase_base = 0x0 /* 0.000000 */;
   _ctx.phase = 0x0 /* 0.000000 */;
   _ctx.fs = 0x0 /* 0.000000 */;
   _ctx.freq = 0x0 /* 0.000000 */;
   Sinus_wav_default(_ctx);
   _output_ = _ctx;
   return ;
}

void Sinus_wav_setSamplerate(Sinus_wav__ctx_type_3 &_ctx, fix16_t newFs){
   if(newFs > 0x0 /* 0.000000 */){
      _ctx.fs = newFs;
      _ctx.stepRatio = fix_div(int_to_fix(Sinus_wav_getSize(_ctx)),_ctx.fs);
   }
   Sinus_wav_updateStep(_ctx);
}

void Engine__ctx_type_0_init(Engine__ctx_type_0 &_output_){
   Engine__ctx_type_0 _ctx;
   Sinus_wav__ctx_type_3_init(_ctx.modulator);
   _ctx.fs = 0x0 /* 0.000000 */;
   Sinus_wav__ctx_type_3_init(_ctx.carrier);
   Engine_default(_ctx);
   _output_ = _ctx;
   return ;
}


