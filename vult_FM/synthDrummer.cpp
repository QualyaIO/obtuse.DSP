
/* Code automatically generated by Vult https://github.com/modlfo/vult */
#include "synthDrummer.h"

void synthDrummer_Drummer__ctx_type_2_init(synthDrummer_Drummer__ctx_type_2 &_output_){
   synthDrummer_Drummer__ctx_type_2 _ctx;
   _ctx.step = 0x0 /* 0.000000 */;
   int_init_array(12,0,_ctx.slices_start);
   int_init_array(12,0,_ctx.slices_end);
   _ctx.slice = 0;
   _ctx.size = 0;
   _ctx.sampleFs = 0x0 /* 0.000000 */;
   _ctx.posBase = 0;
   _ctx.pos = 0x0 /* 0.000000 */;
   _ctx.noteRatio = 0x0 /* 0.000000 */;
   _ctx.fsRatio = 0x0 /* 0.000000 */;
   _ctx.fs = 0x0 /* 0.000000 */;
   fix_init_array(256,0x0 /* 0.000000 */,_ctx.buffer_o);
   synthDrummer_Drummer_default(_ctx);
   _output_ = _ctx;
   return ;
}

fix16_t synthDrummer_Drummer_process(synthDrummer_Drummer__ctx_type_2 &_ctx){
   fix16_t value;
   value = 0x0 /* 0.000000 */;
   _ctx.pos = (_ctx.pos + _ctx.step);
   while(_ctx.pos >= 0x4000000 /* 1024.000000 */){
      _ctx.posBase = (1024 + _ctx.posBase);
      _ctx.pos = (-0x4000000 /* -1024.000000 */ + _ctx.pos);
   }
   int idx;
   idx = (_ctx.posBase + fix_to_int(_ctx.pos));
   if(idx >= _ctx.size){
      _ctx.slice = (-1);
      _ctx.posBase = 0;
      _ctx.pos = 0x0 /* 0.000000 */;
   }
   if((_ctx.slice >= 0) && (_ctx.slice <= 12)){
      if(idx >= _ctx.slices_end[_ctx.slice]){
         _ctx.slice = (-1);
         _ctx.posBase = 0;
         _ctx.pos = 0x0 /* 0.000000 */;
      }
      else
      {
         value = (synthDrummer_Drummer_getSample(_ctx,idx) + fix_mul((_ctx.pos % 0x10000 /* 1.000000 */),(synthDrummer_Drummer_getSample(_ctx,(1 + idx)) + (- synthDrummer_Drummer_getSample(_ctx,idx)))));
      }
   }
   return value;
}

void synthDrummer_Drummer_process_bufferTo(synthDrummer_Drummer__ctx_type_2 &_ctx, int nb, fix16_t (&oBuffer)[256]){
   nb = int_clip(nb,0,256);
   if(nb == 0){
      nb = 256;
   }
   fix16_t value;
   int i;
   while(i < nb){
      value = 0x0 /* 0.000000 */;
      _ctx.pos = (_ctx.pos + _ctx.step);
      while(_ctx.pos >= 0x4000000 /* 1024.000000 */){
         _ctx.posBase = (1024 + _ctx.posBase);
         _ctx.pos = (-0x4000000 /* -1024.000000 */ + _ctx.pos);
      }
      int idx;
      idx = (_ctx.posBase + fix_to_int(_ctx.pos));
      if(idx >= _ctx.size){
         _ctx.slice = (-1);
         _ctx.posBase = 0;
         _ctx.pos = 0x0 /* 0.000000 */;
      }
      if((_ctx.slice >= 0) && (_ctx.slice <= 12)){
         if(idx >= _ctx.slices_end[_ctx.slice]){
            _ctx.slice = (-1);
            _ctx.posBase = 0;
            _ctx.pos = 0x0 /* 0.000000 */;
         }
         else
         {
            value = (synthDrummer_Drummer_getSample(_ctx,idx) + fix_mul((_ctx.pos % 0x10000 /* 1.000000 */),(synthDrummer_Drummer_getSample(_ctx,(1 + idx)) + (- synthDrummer_Drummer_getSample(_ctx,idx)))));
         }
      }
      oBuffer[i] = value;
      i = (1 + i);
   }
}

void synthDrummer_Drummer_setSlices(synthDrummer_Drummer__ctx_type_2 &_ctx, int (&newSlicesStart)[12], int (&newSlicesEnd)[12]){
   if((12 == 12) && (12 == 12) && (12 == 12)){
      int i;
      i = 0;
      int s;
      int e;
      while(i < 12){
         s = int_clip(newSlicesStart[i],0,((-1) + synthDrummer_Drummer_drumkit_samples()));
         e = int_clip(newSlicesEnd[i],0,((-1) + synthDrummer_Drummer_drumkit_samples()));
         if(s <= e){
            _ctx.slices_start[i] = s;
            _ctx.slices_end[i] = e;
         }
         i = (1 + i);
      }
   }
}

void synthDrummer_Drummer_setSamplerate(synthDrummer_Drummer__ctx_type_2 &_ctx, fix16_t newFs){
   if(newFs > 0x0 /* 0.000000 */){
      _ctx.fs = newFs;
      _ctx.fsRatio = fix_div(_ctx.sampleFs,_ctx.fs);
   }
   synthDrummer_Drummer_updateStep(_ctx);
}

void synthDrummer_Drummer_noteOn(synthDrummer_Drummer__ctx_type_2 &_ctx, int note, int velocity, int channel){
   note = int_clip(note,0,127);
   int root;
   root = 60;
   _ctx.slice = (note % 12);
   if((_ctx.slice >= 0) && (_ctx.slice < 12)){
      _ctx.posBase = _ctx.slices_start[_ctx.slice];
      _ctx.pos = 0x0 /* 0.000000 */;
   }
   int slice_root;
   slice_root = (note + (- _ctx.slice));
   fix16_t log_two;
   log_two = 0xb172 /* 0.693147 */;
   fix16_t octave;
   octave = fix_mul(0x1555 /* 0.083333 */,int_to_fix((slice_root + (- root))));
   _ctx.noteRatio = fix_exp(fix_mul(log_two,octave));
   synthDrummer_Drummer_updateStep(_ctx);
}

void synthDrummer_Drummer_default(synthDrummer_Drummer__ctx_type_2 &_ctx){
   _ctx.size = synthDrummer_Drummer_drumkit_samples();
   _ctx.sampleFs = 0x1e0000 /* 30.000000 */;
   synthDrummer_Drummer_setSamplerate(_ctx,0x2c1999 /* 44.100000 */);
   int _array_38[12];
   {
      _array_38[0] = 0;
      _array_38[1] = 11500;
      _array_38[2] = 22000;
      _array_38[3] = 26000;
      _array_38[4] = 28800;
      _array_38[5] = 45600;
      _array_38[6] = 46550;
      _array_38[7] = 49000;
      _array_38[8] = 50400;
      _array_38[9] = 61000;
      _array_38[10] = 78100;
      _array_38[11] = 83600;
   }
   int _array_39[12];
   {
      _array_39[0] = 10000;
      _array_39[1] = 21500;
      _array_39[2] = 25500;
      _array_39[3] = 28500;
      _array_39[4] = 45500;
      _array_39[5] = 46500;
      _array_39[6] = 48550;
      _array_39[7] = 50100;
      _array_39[8] = 60000;
      _array_39[9] = 78000;
      _array_39[10] = 83500;
      _array_39[11] = 107000;
   }
   synthDrummer_Drummer_setSlices(_ctx,_array_38,_array_39);
   {
      _ctx.buffer_o[0] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[1] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[2] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[3] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[4] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[5] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[6] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[7] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[8] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[9] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[10] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[11] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[12] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[13] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[14] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[15] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[16] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[17] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[18] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[19] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[20] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[21] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[22] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[23] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[24] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[25] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[26] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[27] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[28] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[29] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[30] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[31] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[32] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[33] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[34] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[35] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[36] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[37] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[38] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[39] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[40] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[41] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[42] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[43] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[44] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[45] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[46] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[47] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[48] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[49] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[50] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[51] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[52] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[53] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[54] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[55] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[56] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[57] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[58] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[59] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[60] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[61] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[62] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[63] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[64] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[65] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[66] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[67] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[68] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[69] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[70] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[71] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[72] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[73] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[74] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[75] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[76] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[77] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[78] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[79] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[80] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[81] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[82] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[83] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[84] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[85] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[86] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[87] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[88] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[89] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[90] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[91] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[92] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[93] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[94] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[95] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[96] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[97] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[98] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[99] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[100] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[101] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[102] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[103] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[104] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[105] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[106] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[107] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[108] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[109] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[110] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[111] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[112] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[113] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[114] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[115] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[116] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[117] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[118] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[119] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[120] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[121] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[122] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[123] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[124] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[125] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[126] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[127] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[128] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[129] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[130] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[131] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[132] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[133] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[134] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[135] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[136] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[137] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[138] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[139] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[140] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[141] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[142] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[143] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[144] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[145] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[146] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[147] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[148] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[149] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[150] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[151] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[152] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[153] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[154] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[155] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[156] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[157] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[158] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[159] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[160] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[161] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[162] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[163] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[164] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[165] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[166] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[167] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[168] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[169] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[170] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[171] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[172] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[173] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[174] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[175] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[176] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[177] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[178] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[179] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[180] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[181] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[182] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[183] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[184] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[185] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[186] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[187] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[188] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[189] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[190] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[191] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[192] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[193] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[194] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[195] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[196] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[197] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[198] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[199] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[200] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[201] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[202] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[203] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[204] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[205] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[206] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[207] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[208] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[209] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[210] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[211] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[212] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[213] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[214] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[215] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[216] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[217] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[218] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[219] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[220] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[221] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[222] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[223] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[224] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[225] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[226] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[227] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[228] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[229] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[230] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[231] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[232] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[233] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[234] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[235] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[236] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[237] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[238] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[239] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[240] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[241] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[242] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[243] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[244] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[245] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[246] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[247] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[248] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[249] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[250] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[251] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[252] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[253] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[254] = 0x0 /* 0.000000 */;
      _ctx.buffer_o[255] = 0x0 /* 0.000000 */;
   }
}


