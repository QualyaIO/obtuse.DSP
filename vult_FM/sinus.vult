
// FIXME: user bigger range as input to improve frequencies range -- E.g. as much as table size? Add getSize() below
fun sine_table(x) @[table(size=1024,min=0.0,max=1.0)] {
   return sin(6.283185307179586 * x);
}

fun process() {
   // audio sampling rate
   mem fs: real;
   // sinus frequency
   mem freq: real;
   // [0..1[ in the wavetable
   mem phase: real;
   // going that much through wavetable at each call
   mem step: real;

   // advance time
   phase = phase + step;
   // loop to stay within best interval for float precision
   phase = phase % 1.0;

   return sine_table(phase);
}
// seter for parameters
// expect values of desired frequency and current sampring rate in kHz. Beware fixed float limits ([1/32767 ..32767]... probably), e.g. with 44.100 hz a freq below around 5hz will not work, and low range will be probably off. Prefare wav version for lower resolution.
and setFrequency(newFreq:real) {
   freq = newFreq;
   step = freq/fs;
}
and setSamplerate(newFs:real) {
   if (newFs > 0.0) {
      fs = newFs;
   }
   step = freq/fs;
}
// manually setting the step between each call, overriding frequency and samplerate for for effiency at times
and setStep(newStep:real) {
   step = newStep;
}
and default() @[init] {
   // default frequency (in kHz)
   _ = setFrequency(0.440);
   // default sampling rate (in kHz)
   _ = setSamplerate(44.1);
}