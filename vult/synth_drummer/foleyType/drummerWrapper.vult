
// wrapping the .wav to give correct information to drummer

external drumkit(channel:int, index:int) : real @[wave(channels=1, file="wav/foley_type_kit.wav")];

// return value for current wavetable (first channel hard-coded), between [0..sample size[
fun getSample(index: int) {
  return drumkit(0, index);
}

fun getSampleSize(): int {
  return drumkit_samples();
}

// passing info from the file
fun getSampleFs(): real {
  return 30.0;
}

// start indices of each sample (inclusive)
fun getSlicesStart(): array(int, 12) {
  return [
          0,      // kick
          14900,  // higher kick
          69100,  // tom
          83350,  // higher tom
          30100,  // snare
          49700,  // higher snare
          60700,  // rimshot
          91100,  // clave
          107700, // higher clave
          22150,  // hi-hat
          99850,  // open hi-hat
          113800  // clap
          ];
}

// stop indices of each sample (inclusive)
fun getSlicesEnd(): array(int, 12) {
  return [
          14300,   // kick
          22000,   // higher kick
          83300,   // tom
          91010,   // higher tom
          49550,   // snare
          60400,   // higher snare
          69010,   // rimshot
          99800,   // clave
          113600,  // higher clave,
          30035,   // hi-hat
          107550,  // open hi-hat
          119800   // clap
          ];
}
