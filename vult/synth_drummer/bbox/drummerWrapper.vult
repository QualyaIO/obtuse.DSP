
// wrapping the .wav to give correct information to drummer

external drumkit(channel:int, index:int) : real @[wave(channels=1, file="wav/bbox_kit.wav")];

// return value for current wavetable (first channel hard-coded), between [0..sample size[
fun getSample(index: int) {
  return drumkit(0, index);
}

fun getSampleSize(): int {
  return drumkit_samples();
}

// passing info from the file
fun getSampleFs(): real {
  return 30.0;
}

// start indices of each sample (inclusive)
fun getSlicesStart(): array(int, 12) {
  return [
          3000,   // kick
          63270,  // real kick
          11260,  // lower tom
          38250,  // tom
          72470,  // real tom
          79210,  // real higher tom
          0,      // snare
          47700,  // higher snare
          22200,  // rimshot
          51500,  // hi-hat
          55300,  // open hi-hat
          29400   // cymbal
          ];
}

// stop indices of each sample (inclusive)
fun getSlicesEnd(): array(int, 12) {
  return [
          11150, // kick
          72465, // real kick
          22000, // lower tom
          47000, // tom
          79200, // real tom
          86200, // real higher tom
          2750,  // snare
          51300, // higher snare
          29100, // rimshot
          55100, // hi-hat
          63256, // open hi-hat
          38100  // cymbal
          ];
}
