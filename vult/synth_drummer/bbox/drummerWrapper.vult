
// wrapping the .wav to give correct information to drummer

external drumkit(channel:int, index:int) : real @[wave(channels=1, file="wav/bbox_kit.wav")];

// return value for current wavetable (first channel hard-coded), between [0..sample size[
fun getSample(index: int) {
  return drumkit(0, index);
}

fun getSampleSize(): int {
  return drumkit_samples();
}

// passing info from the file
fun getSampleFs(): real {
  return 30.0;
}

// start indices of each sample (inclusive)
fun getSlicesStart(): array(int, 12) {
  return [0, 3000, 11260, 22200, 29400, 38250, 47700, 51500, 55300, 63270, 72470, 79210];
}

// stop indices of each sample (inclusive)
fun getSlicesEnd(): array(int, 12) {
  return [2750, 11150, 22000, 29100, 38100, 47000, 51300, 55100, 63256, 72465, 79200, 86200];
}
