
// wrapping the .wav to give correct information to drummer

external drumkit(channel:int, index:int) : real @[wave(channels=1, file="wav/nes_kit.wav")];

// return value for current wavetable (first channel hard-coded), between [0..sample size[
fun getSample(index: int) {
  return drumkit(0, index);
}

fun getSampleSize(): int {
  return drumkit_samples();
}

// passing info from the file
fun getSampleFs(): real {
  return 30.0;
}

// start indices of each sample (inclusive)
fun getSlicesStart(): array(int, 12) {
  return [
          0,     // kick
          7000,  // high kick
          28000, // low tom
          14850, // high tom
          48000, // low snare
          57200, // high snare
          94500, // low conga
          85000, // high conga
          43900, // clave
          66600, // hi-hat
          68900, // open hi-hat
          73300  // clap or clash cymbal
          ];                              
}

// stop indices of each sample (inclusive)
fun getSlicesEnd(): array(int, 12) {
  return [
          6250,   // kick
          14000,  // high kick
          43400,  // low tom
          26800,  // high tom
          56900,  // low snare
          66000,  // high snare
          103500, // low conga
          94000,  // high conga
          47950,  // clave
          68500,  // hi-hat
          72400,  // open hi-hat
          84600   // clap or clash cymbal
          ];
}
