
// wrapping the .wav to give correct information to drummer

external drumkit(channel:int, index:int) : real @[wave(channels=1, file="wav/808.wav")];

// return value for current wavetable (first channel hard-coded), between [0..sample size[
fun getSample(index: int) {
  return drumkit(0, index);
}

fun getSampleSize(): int {
  return drumkit_samples();
}

// passing info from the file
fun getSampleFs(): real {
  return 30.0;
}

// start indices of each sample (inclusive)
fun getSlicesStart(): array(int, 12) {
  return [
          0,      // kick
          11500,  // higher kick
          83600,  // medium tom
          78100,  // high tom
          22000,  // snare
          26000,  // rimshot
          50400,  // conga
          46550,  // lower clave
          45600,  // clave
          49000,  // hi-hat
          61000,  // open hi-hat
          28800   // clap
          ];
}
  //return [0, 11500, 22000, 26000, 28800, 45600, 46550, 49000, 50400, 61000, 78100, 83600];

// stop indices of each sample (inclusive)
fun getSlicesEnd(): array(int, 12) {
  return [
           10000,  // kick
           21500,  // higher kick
           107000, // medium tom
           83500,  // high tom
           25500,  // snare
           28500,  // rimshot
           60000,  // conga
           46500,  // clave
           48550,  // lower clave
           50100,  // hi-hat
           78000,  // open hi-hat
           45500   // clap
           ];
}
